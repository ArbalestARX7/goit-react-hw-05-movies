{"version":3,"file":"static/js/309.6518255f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieInformatiom/MovieInformation.module.css?bd52","components/MovieInformatiom/MovieInformation.js","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.js","sevices/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDesc\":\"MovieInformation_MovieDesc__R1YIw\",\"inform\":\"MovieInformation_inform__UuBiH\",\"movieTitle\":\"MovieInformation_movieTitle__TWHoF\",\"movieAbout\":\"MovieInformation_movieAbout__I7Iic\",\"movieAbotDesc\":\"MovieInformation_movieAbotDesc__GiSy9\"};","import css from './MovieInformation.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieInformation = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, genres, overview } =\n    movie;\n\n  let genresList = '';\n\n  if (genres) {\n    genresList = genres.map(genre => genre.name).join(', ');\n  }\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const defaultImg =\n    'https://printworks-manchester.com/cinema-poster/images/film-poster-placeholder.png';\n\n  return (\n    <div className={css.MovieDesc}>\n      <img width=\"350px\" src={poster_path ? imgUrl : defaultImg} alt={title} />\n      <div className={css.inform}>\n        <h2 className={css.movieTitle}>{title}</h2>\n        <p className={css.movieAbout}>\n          <span className={css.movieAbotDesc}>Release date:</span>\n          {release_date}\n        </p>\n        <p className={css.movieAbout}>\n          <span className={css.movieAbotDesc}>Rating:</span>\n          {vote_average}\n        </p>\n        <p className={css.movieAbout}>\n          <span className={css.movieAbotDesc}>Genres:</span>\n          {genresList}\n        </p>\n        <p className={css.movieAbout}>\n          <span className={css.movieAbotDesc}>Overview:</span>\n          {overview}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInformation;\n\nMovieInformation.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Link\":\"MovieDetails_Link__ZXyTN\"};","import MovieInformation from 'components/MovieInformatiom/MovieInformation';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'sevices/api';\nimport { Puff } from 'react-loader-spinner';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLocationLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(movie => setMovie(movie))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div className=\"wrapper\">\n      <Link className={css.Link} to={backLocationLink.current}>\n        Back\n      </Link>\n      <MovieInformation movie={movie} />\n      <Link className={css.Link} to=\"cast\">\n        Cast\n      </Link>\n      <Link className={css.Link} to=\"reviews\">\n        Reviews\n      </Link>\n      <Suspense fallback={<Puff color=\"#3B5249\"></Puff>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'c7ca8a74e600bcb8b6add51ea98a0474';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n\nexport async function getMoviesByQuerry(querry) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${querry}`\n  );\n\n  const { data } = response;\n\n  return data.results;\n}\n\nexport async function getCastById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n"],"names":["movie","poster_path","title","release_date","vote_average","genres","overview","genresList","map","genre","name","join","imgUrl","concat","className","css","width","src","alt","useState","setMovie","movieId","useParams","location","useLocation","backLocationLink","useRef","state","from","useEffect","getMovieById","then","catch","error","console","log","to","current","Suspense","fallback","color","API_KEY","getTrendingMovies","axios","response","data","id","getMoviesByQuerry","querry","results","getCastById","getReviewsById"],"sourceRoot":""}