{"version":3,"file":"static/js/568.d68d2a0b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/components/SearchMovieForm/SearchMovieForm.module.css?dfe9","components/SearchMovieForm/SearchMovieForm.js","pages/Movies.js","sevices/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieCard_movieCard__jf5v8\",\"movieTitle\":\"MovieCard_movieTitle__61Rqx\"};","import css from './MovieCard.module.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie, location }) => {\n  const { poster_path, title, id } = movie;\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const defaultImg =\n    'https://printworks-manchester.com/cinema-poster/images/film-poster-placeholder.png';\n\n  return (\n    <li className={css.movieCard}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          width=\"500px\"\n          src={poster_path ? imgUrl : defaultImg}\n          alt={title}\n        />\n        <h2 className={css.movieTitle}>{title}</h2>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\"};","import { useLocation } from 'react-router-dom';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} location={location} movie={movie} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchMovieForm_searchForm__XEN1f\",\"serchButton\":\"SearchMovieForm_serchButton__xiYra\",\"searchInput\":\"SearchMovieForm_searchInput__iyl8+\"};","import css from './SearchMovieForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst SearchMovieForm = ({ onSubmit }) => {\n  return (\n    <form className={css.searchForm} onSubmit={onSubmit}>\n      <button className={css.serchButton} type=\"submit\">\n        Search\n      </button>\n\n      <input\n        name=\"querry\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search Films\"\n        className={css.searchInput}\n      />\n    </form>\n  );\n};\n\nexport default SearchMovieForm;\n\nSearchMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { getMoviesByQuerry } from 'sevices/api';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMovieForm from 'components/SearchMovieForm/SearchMovieForm';\n\nconst Movies = () => {\n  const [moviesByQuerry, setMoviesByQuerry] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querry = searchParams.get('searchQuerry') ?? '';\n\n  useEffect(() => {\n    getMoviesByQuerry(querry)\n      .then(movies => setMoviesByQuerry(movies))\n      .catch(error => console.log(error));\n  }, [querry]);\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n\n    const searchForm = evt.target;\n    const searchQuerry = searchForm.elements.querry.value;\n\n    if (searchQuerry.trim() === '') {\n      alert('Write the name of the movie');\n    }\n\n    const nextSearchQuerry = searchQuerry !== '' ? { searchQuerry } : {};\n    setSearchParams(nextSearchQuerry);\n    searchForm.reset();\n  };\n\n  return (\n    <div>\n      <SearchMovieForm querry={querry} onSubmit={onFormSubmit} />\n      <MoviesList movies={moviesByQuerry} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'c7ca8a74e600bcb8b6add51ea98a0474';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n\nexport async function getMovieById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n\nexport async function getMoviesByQuerry(querry) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${querry}`\n  );\n\n  const { data } = response;\n\n  return data.results;\n}\n\nexport async function getCastById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n\nexport async function getReviewsById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data;\n}\n"],"names":["movie","location","poster_path","title","id","imgUrl","concat","className","css","to","state","from","width","src","alt","movies","useLocation","map","onSubmit","type","name","autoComplete","autoFocus","placeholder","useState","moviesByQuerry","setMoviesByQuerry","useSearchParams","searchParams","setSearchParams","querry","get","useEffect","getMoviesByQuerry","then","catch","error","console","log","evt","preventDefault","searchForm","target","searchQuerry","elements","value","trim","alert","reset","MoviesList","API_KEY","getTrendingMovies","axios","response","data","getMovieById","results","getCastById","getReviewsById"],"sourceRoot":""}